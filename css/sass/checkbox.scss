@use "variables";

#checkbox-container {
  // Don't display by default
  // (Only display later on if the script detects it can be handled)
  display: none;
  font-size: 0.75rem;

  p:first-of-type {
    line-height: variables.$unit-line-height;
    span {
      color: grey;
      text-transform: uppercase;
    }
  }

  p:last-of-type {
    color: grey;
    opacity: 0;
    transition: opacity variables.$transition-checkbox;
  }
}

// Stop highlight on tap
input,
label {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

// Style checkbox to look like switch
$checkbox-container-width: 66px;
$checkbox-container-height: 40px;
$checkbox-dot-diameter: 30px;
$checkbox-side-buffer: 6px;
// Prepare containing element
.switch {
  position: relative;
  display: inline-block;
  // Optically align
  left: -0.25rem;
  // Hide input
  input {
    display: none;
  }

  // Style label instead
  label {
    display: block;
    width: $checkbox-container-width;
    height: $checkbox-container-height;
    text-indent: -150%;
    clip: rect(0 0 0 0);
    color: transparent;
    user-select: none;
  }
  label::before,
  label::after {
    content: "";
    display: block;
    position: absolute;
    cursor: pointer;
  }
  label::before {
    width: 100%;
    height: 100%;
    background-color: white;
    border: 2px solid black;
    border-radius: $checkbox-container-height;
    transition: background-color 0.25s ease;
  }
  // Style the dot when off
  label::after {
    top: calc(50% - (#{$checkbox-dot-diameter / 2}));
    left: $checkbox-side-buffer;
    width: $checkbox-dot-diameter;
    height: $checkbox-dot-diameter;
    border-radius: 50%;
    background-color: black;
    border: 2px solid white;
    transition: left variables.$transition-checkbox;
  }
  input:checked + label::before {
    background-color: black;
  }
  // Style the dot when on
  input:checked + label::after {
    background-color: white;
    border: 2px solid white;
    left: calc(#{$checkbox-container-width} - #{$checkbox-dot-diameter} - #{$checkbox-side-buffer});
  }
}
